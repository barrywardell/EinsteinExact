# File produced by Kranc

STORAGE: metric_exact[other_timelevels]

STORAGE: curv_exact[other_timelevels]

STORAGE: lapse_exact[other_timelevels]

STORAGE: dtlapse_exact[other_timelevels]

STORAGE: shift_exact[other_timelevels]

STORAGE: dtshift_exact[other_timelevels]
schedule Vaidya2_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule Vaidya2_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"

if (CCTK_EQUALS(initial_data, "Vaidya2"))
{
  schedule Vaidya2_initial in ADMBase_InitialData
  {
    LANG: C
    READS: grid::x(Everywhere)
    READS: grid::y(Everywhere)
    READS: grid::z(Everywhere)
    WRITES: admbase::alp(Everywhere)
    WRITES: admbase::betax(Everywhere)
    WRITES: admbase::betay(Everywhere)
    WRITES: admbase::betaz(Everywhere)
    WRITES: admbase::dtalp(Everywhere)
    WRITES: admbase::dtbetax(Everywhere)
    WRITES: admbase::dtbetay(Everywhere)
    WRITES: admbase::dtbetaz(Everywhere)
    WRITES: admbase::gxx(Everywhere)
    WRITES: admbase::gxy(Everywhere)
    WRITES: admbase::gxz(Everywhere)
    WRITES: admbase::gyy(Everywhere)
    WRITES: admbase::gyz(Everywhere)
    WRITES: admbase::gzz(Everywhere)
    WRITES: admbase::kxx(Everywhere)
    WRITES: admbase::kxy(Everywhere)
    WRITES: admbase::kxz(Everywhere)
    WRITES: admbase::kyy(Everywhere)
    WRITES: admbase::kyz(Everywhere)
    WRITES: admbase::kzz(Everywhere)
  } "Vaidya2_initial"
}

if (CCTK_EQUALS(evolution_method, "Vaidya2"))
{
  schedule Vaidya2_always at CCTK_PRESTEP
  {
    LANG: C
    READS: grid::x(Everywhere)
    READS: grid::y(Everywhere)
    READS: grid::z(Everywhere)
    WRITES: admbase::alp(Everywhere)
    WRITES: admbase::betax(Everywhere)
    WRITES: admbase::betay(Everywhere)
    WRITES: admbase::betaz(Everywhere)
    WRITES: admbase::dtalp(Everywhere)
    WRITES: admbase::dtbetax(Everywhere)
    WRITES: admbase::dtbetay(Everywhere)
    WRITES: admbase::dtbetaz(Everywhere)
    WRITES: admbase::gxx(Everywhere)
    WRITES: admbase::gxy(Everywhere)
    WRITES: admbase::gxz(Everywhere)
    WRITES: admbase::gyy(Everywhere)
    WRITES: admbase::gyz(Everywhere)
    WRITES: admbase::gzz(Everywhere)
    WRITES: admbase::kxx(Everywhere)
    WRITES: admbase::kxy(Everywhere)
    WRITES: admbase::kxz(Everywhere)
    WRITES: admbase::kyy(Everywhere)
    WRITES: admbase::kyz(Everywhere)
    WRITES: admbase::kzz(Everywhere)
  } "Vaidya2_always"
}

if (CCTK_EQUALS(exact_method, "Vaidya2"))
{
  schedule Vaidya2_exact at CCTK_ANALYSIS
  {
    LANG: C
    READS: admbase::gxx(Everywhere)
    READS: admbase::gxy(Everywhere)
    READS: admbase::gxz(Everywhere)
    READS: admbase::gyy(Everywhere)
    READS: admbase::gyz(Everywhere)
    READS: admbase::gzz(Everywhere)
    READS: grid::x(Everywhere)
    READS: grid::y(Everywhere)
    READS: grid::z(Everywhere)
    WRITES: Vaidya2::alpExact(Everywhere)
    WRITES: Vaidya2::betaExact1(Everywhere)
    WRITES: Vaidya2::betaExact2(Everywhere)
    WRITES: Vaidya2::betaExact3(Everywhere)
    WRITES: Vaidya2::dtalpExact(Everywhere)
    WRITES: Vaidya2::dtbetaExact1(Everywhere)
    WRITES: Vaidya2::dtbetaExact2(Everywhere)
    WRITES: Vaidya2::dtbetaExact3(Everywhere)
    WRITES: Vaidya2::gExact11(Everywhere)
    WRITES: Vaidya2::gExact12(Everywhere)
    WRITES: Vaidya2::gExact13(Everywhere)
    WRITES: Vaidya2::gExact22(Everywhere)
    WRITES: Vaidya2::gExact23(Everywhere)
    WRITES: Vaidya2::gExact33(Everywhere)
    WRITES: Vaidya2::kExact11(Everywhere)
    WRITES: Vaidya2::kExact12(Everywhere)
    WRITES: Vaidya2::kExact13(Everywhere)
    WRITES: Vaidya2::kExact22(Everywhere)
    WRITES: Vaidya2::kExact23(Everywhere)
    WRITES: Vaidya2::kExact33(Everywhere)
  } "Vaidya2_exact"
}

schedule Vaidya2_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
} "select boundary conditions"

schedule Vaidya2_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule Vaidya2_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"

schedule Vaidya2_ParamCheck at PARAMCHECK
{
  LANG: C
  OPTIONS: global
} "Check parameter consistency"
schedule group ApplyBCs as Vaidya2_ApplyBCs in MoL_PostStep after Vaidya2_SelectBoundConds
{
} "Apply boundary conditions controlled by thorn Boundary"
